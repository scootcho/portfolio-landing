<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Assemblying Scottbot]]></title>
  <link href="http://scootcho.github.io/atom.xml" rel="self"/>
  <link href="http://scootcho.github.io/"/>
  <updated>2014-07-13T12:24:31+08:00</updated>
  <id>http://scootcho.github.io/</id>
  <author>
    <name><![CDATA[Scott Yu]]></name>
    <email><![CDATA[scott.tj.yu@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Codecademy JavaScript Continue]]></title>
    <link href="http://scootcho.github.io/blog/2014/07/08/codecademy-javascript-continue/"/>
    <updated>2014-07-08T22:39:52+08:00</updated>
    <id>http://scootcho.github.io/blog/2014/07/08/codecademy-javascript-continue</id>
    <content type="html"><![CDATA[<p>3.5 hrs</p>

<p>I continued the Codecademy&rsquo;s <a href="http://www.codecademy.com/tracks/javascript">JavaScript Track</a> today. My goal is to wrap up this week so I can build more front-end mini projects.</p>

<p>Although I did a couple of basic JavaScript projects earlier (<a href="https://github.com/scootcho/the_odin_project/tree/master/sketchpad">Sketchpad</a> &amp; <a href="https://github.com/scootcho/the_odin_project/tree/master/javascript">Project Euler</a>), but I felt the need for more practice with my JavaScript &amp; jQuery when I was working on the <a href="http://scootcho.github.io/blog/2014/06/30/javascript-range-slider/">range slider</a> last week.</p>

<p>Good thing is, I have already scoped out a couple of cool mini projects to build:</p>

<pre class="codepen" data-height="440" data-type="result" data-href="IHbvh" data-user="jackrugile"><code> </code></pre>


<script async src="http://codepen.io:/assets/embed/ei.js"></script>




<!--more-->




<pre class="codepen" data-height="440" data-type="result" data-href="sjcoa" data-user="zerospree"><code> </code></pre>


<script async src="http://codepen.io:/assets/embed/ei.js"></script>


<p>I&rsquo;m looking forward to make some cool stuff. If you happen to see anything cool to build, please let me know! Thanks!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Open Source Cloud &amp; Desktop IDE]]></title>
    <link href="http://scootcho.github.io/blog/2014/07/04/open-source-cloud-and-desktop-ide/"/>
    <updated>2014-07-04T15:08:47+08:00</updated>
    <id>http://scootcho.github.io/blog/2014/07/04/open-source-cloud-and-desktop-ide</id>
    <content type="html"><![CDATA[<p>I came across <a href="https://github.com/FriendCode/codebox" target="_blank">Codebox IDE</a> an open source cloud IDE because a project I&rsquo;m working on is using it as the cloud development enviornment.</p>

<p><img src="https://raw.github.com/FriendCode/codebox/master/screenshot.png"></p>

<!--more-->


<p>excerpt from site:</p>

<blockquote><p>Codebox is built with web technologies: <code>node.js</code>, <code>javascript</code>, <code>html</code> and <code>less</code>. The IDE possesses a very modular and extensible architecture, that allows you to build your own features with through add-ons. Codebox is the first open and modular IDE capable of running both on the Desktop and in the cloud (with offline support).</p></blockquote>

<p>This looks like a really interesting project. I hope I will be able to contribute to it in the near future.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lesson 1: Twitter API]]></title>
    <link href="http://scootcho.github.io/blog/2014/07/03/lesson-1-twitter-api/"/>
    <updated>2014-07-03T10:38:17+08:00</updated>
    <id>http://scootcho.github.io/blog/2014/07/03/lesson-1-twitter-api</id>
    <content type="html"><![CDATA[<p>2 hrs</p>

<p>Today I received the first lesson from the <a href="https://www.makeitwithcode.com/" target="_blank">MakeItWithCode</a> team. The lesson briefly covers some basics for beginners such as linux commands and run <code>bundle</code> to install Ruby gems. But the emphasis of this course is to build things so it dives striaght into the <a href="https://github.com/sferik/twitter" target="_blank">Twitter Ruby Gem</a>, which I like.</p>

<p>You&rsquo;ll need to signup for a <a href="https://dev.twitter.com/apps/new" target="_blank">Twitter Developer Account</a> to access the API. Once that&rsquo;s done, use the keys from the Twitter Developer Account in your code.</p>

<!--more-->


<p>The first task is to get the first weet from a specified user, in this example, I used my own twitter handle, <code>scootcho</code>:</p>

<figure class='code'><figcaption><span>gets_tweets.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;twitter&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Authentication details from twitter, your starting</span>
</span><span class='line'><span class="c1"># point is here: https://dev.twitter.com/apps/new</span>
</span><span class='line'><span class="n">client</span> <span class="o">=</span> <span class="ss">Twitter</span><span class="p">:</span><span class="ss">:REST</span><span class="o">::</span><span class="no">Client</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">consumer_key</span>    <span class="o">=</span> <span class="s2">&quot;xxxxxxxxxxxxxxxxxx&quot;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">consumer_secret</span> <span class="o">=</span> <span class="s2">&quot;xxxxxxxxxxxxxxxxxx&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Get the first tweet of the specified user</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">client</span><span class="o">.</span><span class="n">user_timeline</span><span class="p">(</span><span class="s2">&quot;scootcho&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">text</span>
</span></code></pre></td></tr></table></div></figure>


<p>Next, print out the tweets to screen:</p>

<figure class='code'><figcaption><span>gets_tweets.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;twitter&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">client</span> <span class="o">=</span> <span class="ss">Twitter</span><span class="p">:</span><span class="ss">:REST</span><span class="o">::</span><span class="no">Client</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">consumer_key</span>    <span class="o">=</span> <span class="s2">&quot;xxxxxxxxxxxxxxxxxx&quot;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">consumer_secret</span> <span class="o">=</span> <span class="s2">&quot;xxxxxxxxxxxxxxxxxx&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># twitter handle to get tweets for</span>
</span><span class='line'><span class="n">the_twitter_handle</span> <span class="o">=</span> <span class="s2">&quot;scootcho&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># go through each tweet and print out the text</span>
</span><span class='line'><span class="n">client</span><span class="o">.</span><span class="n">user_timeline</span><span class="p">(</span><span class="n">the_twitter_handle</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">tweet</span><span class="o">|</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="n">tweet</span><span class="o">.</span><span class="n">text</span>
</span><span class='line'><span class="k">end</span><span class="p">;</span> <span class="kp">nil</span>
</span></code></pre></td></tr></table></div></figure>


<p>Pick a Twitter Handle and displays the 10 most recent tweets mentioning &ldquo;learn to code&rdquo;:</p>

<figure class='code'><figcaption><span>gets_tweets.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;twitter&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">client</span> <span class="o">=</span> <span class="ss">Twitter</span><span class="p">:</span><span class="ss">:REST</span><span class="o">::</span><span class="no">Client</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">consumer_key</span>    <span class="o">=</span> <span class="s2">&quot;xxxxxxxxxxxxxxxxxx&quot;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">consumer_secret</span> <span class="o">=</span> <span class="s2">&quot;xxxxxxxxxxxxxxxxxx&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">client</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s2">&quot;learn to code&quot;</span><span class="p">,</span> <span class="ss">:result_type</span> <span class="o">=&gt;</span> <span class="s2">&quot;recent&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">take</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">tweet</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">tweet</span><span class="o">.</span><span class="n">text</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>There are a couple more things I would like to play with the Twitter API based on suggestions:</p>

<ul>
<li>Make the script tweet for you</li>
<li>Try and conduct some more advanced searches using the Twitter query syntax explained <a href="https://dev.twitter.com/docs/using-search" target="_blank">here</a>:</li>
</ul>


<p>I will follow up with the progress in the future.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Codecademy JavaScript]]></title>
    <link href="http://scootcho.github.io/blog/2014/07/02/codecademy-javascript/"/>
    <updated>2014-07-02T22:38:09+08:00</updated>
    <id>http://scootcho.github.io/blog/2014/07/02/codecademy-javascript</id>
    <content type="html"><![CDATA[<p>4 hrs</p>

<p>Knowing that JavaScript will be extremely useful in combination with Ruby on Rails. I started Codecademy&rsquo;s <a href="http://www.codecademy.com/tracks/javascript" target="_blank">JavaScript Track</a> today. It was especially fun building the rock-paper-scissors game.</p>

<p>Scottbot vs Computer, who will win!?</p>

<!-- more -->




<figure class='code'><figcaption><span>rock-paper-scissors</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">scottbotChoice</span> <span class="o">=</span> <span class="nx">prompt</span><span class="p">(</span><span class="s2">&quot;Do you choose rock, paper or scissors?&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Scottbot: &quot;</span> <span class="o">+</span> <span class="nx">scottbotChoice</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">computerChoice</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">();</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nx">computerChoice</span> <span class="o">&lt;</span> <span class="mf">0.34</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'> <span class="nx">computerChoice</span> <span class="o">=</span> <span class="s2">&quot;rock&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">computerChoice</span> <span class="o">&lt;=</span> <span class="mf">0.67</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'> <span class="nx">computerChoice</span> <span class="o">=</span> <span class="s2">&quot;paper&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'> <span class="nx">computerChoice</span> <span class="o">=</span> <span class="s2">&quot;scissors&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Computer: &quot;</span> <span class="o">+</span> <span class="nx">computerChoice</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">compare</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">choice1</span><span class="p">,</span> <span class="nx">choice2</span><span class="p">){</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="nx">choice1</span> <span class="o">===</span> <span class="nx">choice2</span><span class="p">){</span>
</span><span class='line'>        <span class="k">return</span> <span class="s2">&quot;The result is a tie!&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="nx">choice1</span> <span class="o">===</span> <span class="s2">&quot;rock&quot;</span><span class="p">){</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="nx">choice2</span> <span class="o">===</span> <span class="s2">&quot;scissors&quot;</span><span class="p">){</span>
</span><span class='line'>            <span class="k">return</span><span class="p">(</span><span class="s2">&quot;rock wins!&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">choice2</span> <span class="o">===</span> <span class="s2">&quot;paper&quot;</span><span class="p">){</span>
</span><span class='line'>            <span class="k">return</span> <span class="s2">&quot;paper wins!&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="nx">choice1</span> <span class="o">===</span> <span class="s2">&quot;paper&quot;</span><span class="p">){</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="nx">choice2</span> <span class="o">===</span> <span class="s2">&quot;scissors&quot;</span><span class="p">){</span>
</span><span class='line'>            <span class="k">return</span><span class="s2">&quot;scissors wins!&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">choice2</span> <span class="o">===</span> <span class="s2">&quot;scissors&quot;</span><span class="p">){</span>
</span><span class='line'>            <span class="k">return</span> <span class="s2">&quot;scissors wins!&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="nx">choice1</span> <span class="o">===</span> <span class="s2">&quot;scissors&quot;</span><span class="p">){</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="nx">choice2</span> <span class="o">===</span> <span class="s2">&quot;rock&quot;</span><span class="p">){</span>
</span><span class='line'>            <span class="k">return</span><span class="s2">&quot;rock wins!&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">choice2</span> <span class="o">===</span> <span class="s2">&quot;paper&quot;</span><span class="p">){</span>
</span><span class='line'>            <span class="k">return</span> <span class="s2">&quot;scissors wins!&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">compare</span><span class="p">(</span><span class="nx">scottbotChoice</span><span class="p">,</span> <span class="nx">computerChoice</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>result</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">Scottbot</span><span class="o">:</span> <span class="nx">rock</span>
</span><span class='line'><span class="nx">Computer</span><span class="o">:</span> <span class="nx">scissors</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s1">&#39;rock wins!&#39;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Good Times Ahead!]]></title>
    <link href="http://scootcho.github.io/blog/2014/07/01/good-times-ahead/"/>
    <updated>2014-07-01T18:29:51+08:00</updated>
    <id>http://scootcho.github.io/blog/2014/07/01/good-times-ahead</id>
    <content type="html"><![CDATA[<p>Tomorrow, I will be starting the 10 week programming curriculumn at <a href="https://www.makeitwithcode.com/" target="_blank">MakeItWithCode</a>. I will document my learning process here to help myself clarify and understand some concepts. Oh yea, and for memorization too because I have a terrible, terrible memory.</p>

<p>Here is the sneak peak of the <strong>course syllabus</strong>, which obtained from the site once you provide your email address.</p>

<!--more-->




<h2 style="text-align:center;">Course syllabus</h2>


<p><strong>Lesson 1: Twitter API</strong></p>

<p>This is all about getting you used to your development environment and working with other people&#8217;s code. By the end, you&#8217;ll be using Ruby to search Twitter and display results the Terminal.</p>


<p><strong>Lesson 2: CSV &amp; Email</strong>
Data is of limited use when it&rsquo;s stuck within the Terminal. In this lesson, you&rsquo;ll create a simple tool to email yourself an attachment containing the data from your Twitter search.</p>

<p><strong>Lesson 3: Simple Web App</strong></p>

<p>Building web apps is the reason many people start learning to code. To start with the basics, you&#8217;ll build a static web app with 3 pages using Twitter Bootstrap to add a professional layout.</p>


<p><strong>Lesson 4: Dynamic Web App</strong></p>

<p>Expanding on the previous lesson, this project makes your web app a bit more interactive. You&#8217;ll end up with a web app that searches Twitter for tweets about dogs and display them live.</p>


<p><strong>Lesson 5: Web Scraper</strong></p>

<p>APIs are awesome for slicing and dicing data from websites, but in practice many sites don&#8217;t offer one. So to extract the data from Reddit, you&#8217;re going to construct a simple little web scraper.</p>


<p><strong>Lesson 6: ToDo List</strong></p>

<p>This is your first introduction to databases. Building on your basic web app, you&#8217;ll build a ToDo list that you can add items to from the Terminal and view live in your web app.</p>


<p><strong>Lesson 7: Useful ToDo List</strong></p>

<p>Working from the ToDo List, you&#8217;ll learn a bit more about databases so you can update your list and remove items. You&#8217;ll be able to mark ToDo items as completed from within the web app.</p>


<p><strong>Lesson 8: Dashboard</strong></p>

<p>By this point you&#8217;ll have realised that using other people&#8217;s code makes work much easier. This lesson is the best example of that, as you&#8217;ll end up with an awesome dashboard.</p>


<p><strong>Lesson 9: Dashboard Deployed!</strong></p>

<p>You&#8217;ve got a bunch of cool things to show off, now you need to get them online! You&#8217;re going to tweak the dashboard with a custom widget, upload it to Github and deploy it to Heroku.</p>


<p><strong>Lesson 10: Complete Website</strong></p>

<p>One of the most valuable things about knowing how to code is the freedom to throw up simple websites with little time and no money. Whether for a personal portfolio or a client. In this final lesson, you&#8217;re going to take a Bootstrap template, convert it into a Sinatra application and deploy a real, working website.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Javascript Range Slider]]></title>
    <link href="http://scootcho.github.io/blog/2014/06/30/javascript-range-slider/"/>
    <updated>2014-06-30T23:46:07+08:00</updated>
    <id>http://scootcho.github.io/blog/2014/06/30/javascript-range-slider</id>
    <content type="html"><![CDATA[<p>3.5 hrs</p>

<p>I thought it&rsquo;s also important to sharpen some of my front-end skills as well so I chose the <a href="http://thecodeplayer.com/walkthrough/spicing-up-the-html5-range-slider-input?utm_source=TheCodePlayer&amp;utm_campaign=5b4d9871a4-Direct_Messages10_1_2013&amp;utm_medium=email&amp;utm_term=0_9d9ac48e00-5b4d9871a4-89594157">HTML5 Range Slider</a>for practice.</p>

<pre class="codepen" data-height="440" data-type="result" data-href="nKHfy" data-user="scootcho"><code> </code></pre>


<script async src="http://codepen.io:/assets/embed/ei.js"></script>


<p>I&rsquo;m sure you&rsquo;ve noticed the slider nob is a little messed up. I even went back and copied and pasted the code from the source but it didn&rsquo;t help. I think this might be a browser thing. As quoted in the <a href="http://thecodeplayer.com/walkthrough/spicing-up-the-html5-range-slider-input?utm_source=TheCodePlayer&amp;utm_campaign=5b4d9871a4-Direct_Messages10_1_2013&amp;utm_medium=email&amp;utm_term=0_9d9ac48e00-5b4d9871a4-89594157">walkthrough</a>:</p>

<blockquote><p>Note: This is a chrome only demo/walkthrough as it uses features which are currently not supported in other browsers.</p></blockquote>




<!--more-->


<p>If you have any idea how to fix this issue please let me know! I&rsquo;d love to know!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[More Ruby Review]]></title>
    <link href="http://scootcho.github.io/blog/2014/06/29/more-ruby-review/"/>
    <updated>2014-06-29T23:30:50+08:00</updated>
    <id>http://scootcho.github.io/blog/2014/06/29/more-ruby-review</id>
    <content type="html"><![CDATA[<p>5 hrs</p>

<p>Finished reviewing Codecademy&rsquo;s <a href="http://www.codecademy.com/tracks/ruby" target="_blank">Ruby Track</a> today.</p>

<p>Here are some more snippets:</p>

<figure class='code'><figcaption><span>use proc and assign a variable named &#8216;cube&#8217; that will cube an array of numbers</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cube</span> <span class="o">=</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">x</span> <span class="o">**</span> <span class="mi">3</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">].</span><span class="n">collect!</span><span class="p">(</span><span class="o">&amp;</span><span class="n">cube</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">27</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="o">].</span><span class="n">map!</span><span class="p">(</span><span class="o">&amp;</span><span class="n">cube</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="o">[</span><span class="mi">64</span><span class="p">,</span> <span class="mi">125</span><span class="p">,</span> <span class="mi">216</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->




<figure class='code'><figcaption><span>Create a program that will keep track of movie ratings.</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">movies</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">Memento</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">Primer</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">Ishtar</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;What would you like to do?&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;-- Type &#39;add&#39; to add a movie.&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;-- Type &#39;update&#39; to update a movie.&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;-- Type &#39;display&#39; to display all movies.&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;-- Type &#39;delete&#39; to delete a movie.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">choice</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="o">.</span><span class="n">downcase</span>
</span><span class='line'>
</span><span class='line'><span class="k">case</span> <span class="n">choice</span>
</span><span class='line'><span class="k">when</span> <span class="s1">&#39;add&#39;</span>
</span><span class='line'>   <span class="nb">puts</span> <span class="s2">&quot;What movie do you want to add?&quot;</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">title</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>  
</span><span class='line'>   <span class="k">if</span> <span class="n">movies</span><span class="o">[</span><span class="n">title</span><span class="o">.</span><span class="n">to_sym</span><span class="o">].</span><span class="n">nil?</span>
</span><span class='line'>     <span class="nb">puts</span> <span class="s2">&quot;What&#39;s the rating? (Type a number 0 to 4.)&quot;</span>
</span><span class='line'>     <span class="n">rating</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>     <span class="n">movies</span><span class="o">[</span><span class="n">title</span><span class="o">.</span><span class="n">to_sym</span><span class="o">]</span> <span class="o">=</span> <span class="n">rating</span><span class="o">.</span><span class="n">to_i</span>
</span><span class='line'>     <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">title</span><span class="si">}</span><span class="s2"> has been added with a rating of </span><span class="si">#{</span><span class="n">rating</span><span class="si">}</span><span class="s2">.&quot;</span>
</span><span class='line'>   <span class="k">else</span>
</span><span class='line'>     <span class="nb">puts</span> <span class="s2">&quot;That movie already exists! Its rating is </span><span class="si">#{</span><span class="n">movies</span><span class="o">[</span><span class="n">title</span><span class="o">.</span><span class="n">to_sym</span><span class="o">]</span><span class="si">}</span><span class="s2">.&quot;</span>
</span><span class='line'>   <span class="k">end</span>
</span><span class='line'><span class="k">when</span> <span class="s1">&#39;update&#39;</span>
</span><span class='line'>   <span class="nb">puts</span> <span class="s2">&quot;What movie do you want to update?&quot;</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">title</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>
</span><span class='line'>   <span class="k">if</span> <span class="n">movies</span><span class="o">[</span><span class="n">title</span><span class="o">.</span><span class="n">to_sym</span><span class="o">].</span><span class="n">nil?</span>
</span><span class='line'>     <span class="nb">puts</span> <span class="s2">&quot;Movie not found!&quot;</span>
</span><span class='line'>   <span class="k">else</span>
</span><span class='line'>     <span class="nb">puts</span> <span class="s2">&quot;What&#39;s the new rating? (Type a number 0 to 4.)&quot;</span>
</span><span class='line'>     <span class="n">rating</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>     <span class="n">movies</span><span class="o">[</span><span class="n">title</span><span class="o">.</span><span class="n">to_sym</span><span class="o">]</span> <span class="o">=</span> <span class="n">rating</span><span class="o">.</span><span class="n">to_i</span>
</span><span class='line'>     <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">title</span><span class="si">}</span><span class="s2"> has been updated with new rating of </span><span class="si">#{</span><span class="n">rating</span><span class="si">}</span><span class="s2">.&quot;</span>
</span><span class='line'>   <span class="k">end</span>
</span><span class='line'><span class="k">when</span> <span class="s1">&#39;display&#39;</span>
</span><span class='line'>   <span class="n">movies</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">movie</span><span class="p">,</span> <span class="n">rating</span><span class="o">|</span>
</span><span class='line'>     <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">movie</span><span class="si">}</span><span class="s2">: </span><span class="si">#{</span><span class="n">rating</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>   <span class="k">end</span>
</span><span class='line'><span class="k">when</span> <span class="s1">&#39;delete&#39;</span>
</span><span class='line'>   <span class="nb">puts</span> <span class="s2">&quot;What movie do you want to delete?&quot;</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">title</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>
</span><span class='line'>   <span class="k">if</span> <span class="n">movies</span><span class="o">[</span><span class="n">title</span><span class="o">.</span><span class="n">to_sym</span><span class="o">].</span><span class="n">nil?</span>
</span><span class='line'>     <span class="nb">puts</span> <span class="s2">&quot;Movie not found!&quot;</span>
</span><span class='line'>   <span class="k">else</span>
</span><span class='line'>     <span class="n">movies</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="n">title</span><span class="o">.</span><span class="n">to_sym</span><span class="p">)</span>
</span><span class='line'>     <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">title</span><span class="si">}</span><span class="s2"> has been removed.&quot;</span>
</span><span class='line'>   <span class="k">end</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>   <span class="nb">puts</span> <span class="s2">&quot;Sorry, I didn&#39;t understand you.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Some Ruby Review]]></title>
    <link href="http://scootcho.github.io/blog/2014/06/28/some-ruby-review/"/>
    <updated>2014-06-28T21:35:24+08:00</updated>
    <id>http://scootcho.github.io/blog/2014/06/28/some-ruby-review</id>
    <content type="html"><![CDATA[<p>2.5 hrs</p>

<p>I have signed up for a new online Ruby curriculum which will start next week. We&rsquo;ll be building 10 projects in 10 weeks. I figure I&rsquo;d review some materials from Codecademy&rsquo;s <a href="http://www.codecademy.com/tracks/ruby" target="_blank">Ruby Track</a> I&rsquo;ve completed <a href="http://www.codecademy.com/users/scottyu/achievements" target="_blank">last month</a></p>

<p>I spent about 2.5 hours review part of the material and will continue the review tomorrow.</p>

<p>Here are some review snipets:</p>

<figure class='code'><figcaption><span>How do you sort a word by individual character?</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;sortme&quot;</span><span class="o">.</span><span class="n">chars</span><span class="o">.</span><span class="n">sort</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;e&quot;</span><span class="p">,</span> <span class="s2">&quot;m&quot;</span><span class="p">,</span> <span class="s2">&quot;o&quot;</span><span class="p">,</span> <span class="s2">&quot;r&quot;</span><span class="p">,</span> <span class="s2">&quot;s&quot;</span><span class="p">,</span> <span class="s2">&quot;t&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->




<figure class='code'><figcaption><span>Split name to firstname and lastname with one-line %}</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">name</span> <span class="o">=</span> <span class="s2">&quot;Scott Yu&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">firstname</span><span class="p">,</span> <span class="n">lastname</span> <span class="o">=</span> <span class="nb">name</span><span class="o">.</span><span class="n">split</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;Scott&quot;</span><span class="p">,</span> <span class="s2">&quot;Yu&quot;</span><span class="o">]</span>
</span><span class='line'><span class="n">firstname</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;Scott&quot;</span>
</span><span class='line'><span class="n">lastname</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;Yu&quot;</span>
</span><span class='line'><span class="nb">name</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;Scott Yu&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>true or false %}</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">1</span><span class="o">.</span><span class="n">eql?</span><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">=&gt;</span> <span class="kp">false</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#True if the receiver and argument have both</span>
</span><span class='line'><span class="c1">#the same numeric type and equal values.</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>set default hash value %}</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">hash</span> <span class="o">=</span> <span class="no">Hash</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;notnil&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">hash</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'><span class="nb">hash</span><span class="o">[</span><span class="mi">5</span><span class="o">]</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;notnil&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Back to the Bay]]></title>
    <link href="http://scootcho.github.io/blog/2014/06/13/back-to-the-bay/"/>
    <updated>2014-06-13T08:15:48+08:00</updated>
    <id>http://scootcho.github.io/blog/2014/06/13/back-to-the-bay</id>
    <content type="html"><![CDATA[<p>I almost forgot how fresh and crisp the air is in San Francisco! After spending 9 months with the team in South East Asia, I can&rsquo;t say I miss the humidity one bit.</p>

<p>Since we&rsquo;re a small team, I&rsquo;m doing various things ranging from business development to cleaning the toilet (no, literally). But one of the things I enjoy the most is contributing to our web application!</p>

<!--more-->


<p>Although my background is in Finance, I&rsquo;ve always had an interest in tech and I was learning some front-end things on my own. When I got the chance to design the responsive email template, I was stoked! Although, the code is nothing worth mentioning, and the design was pieced together from different sources, it was still empowering to see the work going out to our customers in the real world.</p>

<p>I was hooked! Since then, I&rsquo;ve been taking oneline courses on my spare time. My goal is to become a better coder so I can help build cool things. Currently, I&rsquo;m learning the Ruby language, Rails framework, and Javascript. I will document my learning process here so one day I can look back and say to myself, &ldquo;hey, you&rsquo;ve come a long way!&rdquo;</p>
]]></content>
  </entry>
  
</feed>
